
#module mfont

#deffunc initFont_ int _in, int _fn
#define global initFont(%1=1, %2=1) initFont_ %1, %2

	imgNum = _in ; 最大画像ファイル数
	fontNum = _fn ; 最大フォント数（1ファイルに含まれるフォント数）
	dim winId, imgNum
	dim divNoStart, imgNum, fontNum
	dim divNoMap, imgNum, fontNum, 96
	dim posx, imgNum, fontNum, 96
	dim posy, imgNum, fontNum, 96
	dim shiftx, imgNum, fontNum, 96
	fimg = 0
	fid = 0
	lspace = 1
	rateX = 1.0
	rateY = 1.0
	return

#deffunc loadFont str _fn, int _id

;分割サイズx, y
;@フォントID, （以下のフォントの）スタート分割ID
;アスキー文字 文字幅, シフトx, y（シフトは省略可）
;（以下分割ID順に）...

	fn = _fn
	sdim buf
	notesel buf
	noteload strmid(fn, 0, strlen(fn) - strlen(getpath(fn, 2)))
	noteget ls, 0
	split ls, ",", ts
	celload fn
	winId(_id) = stat
	celdiv stat, int(ts(0)), int(ts(1))
	fontId = 0
	idp = 0
	repeat notemax - 1, 1
		noteget ls, cnt
		c = peek(ls)
		if (c == 0) : continue
		if (c == '@') {
			if(peek(ls, 1) != ' ') {
				getstr ls, ls, 1
				split ls, ",", ts
				fontId = int(ts(0))
				idp = int(ts(1))
				divNoStart(_id, fontId) = idp
				continue
			}
		}
		ic = c - $20
		divNoMap(_id, fontId, ic) = idp
		idp++
		getstr ls, ls, 2
		split ls, ",", ts
		dim t, 3
		repeat stat
			t(cnt) = int(ts(cnt))
		loop
		shiftx(_id, fontId, ic) = t + t(1)
		posx(_id, fontId, ic) = t(1)
		posy(_id, fontId, ic) = t(2)
	loop
	noteunsel
	return

#deffunc selFontImg int _id

	fimg = _id
	return

#deffunc selFontId int _id

	fid = _id
	return

#deffunc setStrAttr_ double _rx, double _ry, int _ls
#define global setStrAttr(%1=1, %2=1, %3=-1) setStrAttr_ %1, %2, %3

	rateX = _rx
	rateY = _ry
	if (_ls < 0) {
		lspace = 0 + rateX
	} else {
		lspace = _ls
	}
	return

#deffunc drawStr str _m, int _x, int _y
;左上基点

	m = _m
	x = _x
	repeat strlen(m)
		c = peek(m, cnt) - $20
		x -= rateX * posx(fimg, fid, c)
		pos x, _y + rateY * posy(fimg, fid, c)
		celput winId(fimg), divNoMap(fimg, fid, c), rateX, rateY
		x += rateX * shiftx(fimg, fid, c) + lspace
	loop
	return

#deffunc drawStrR str _m, int _x, int _y
;右上基点

	m = _m
	x = _x
	len = strlen(m)
	repeat len
		c = peek(m, len - 1 - cnt) - $20
		x -= rateX * shiftx(fimg, fid, c)
		pos x, _y + rateY * posy(fimg, fid, c)
		celput winId(fimg), divNoMap(fimg, fid, c), rateX, rateY
		x += rateX * posx(fimg, fid, c) - lspace
	loop
	return

#deffunc drawStrC str _m, int _x, int _y
;中央上基点

	m = _m
	x = 0
	repeat strlen(m)
		c = peek(m, cnt) - $20
		x -= rateX * posx(fimg, fid, c)
		x += rateX * shiftx(fimg, fid, c) + lspace
	loop
	drawStr m, _x - x / 2, _y
	return

#defcfunc getStrWidth str _m

	m = _m
	x = 0
	repeat strlen(m)
		c = peek(m, cnt) - $20
		x += rateX * (shiftx(fimg, fid, c) - posx(fimg, fid, c)) + lspace
	loop
	return x

#global
