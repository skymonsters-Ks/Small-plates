;$a>stgjs.ax

;$data wx:480,wy:480,mem:16
#define TITLE_NAME         "Star: The Gathering JS"
#define DATA_FONT          "font/recp8x8"
#define DATA_FONTIMG       "font/recp8x8.png"
#define DATA_STAR          "image/star.png"
;$end


#include "hsp3dish.as"
#include "../common/platform.hsp"
#include "../common/imgfont.hsp"


#module

#const PI_D32  M_PI / 32

#deffunc drawCircle int _x, int _y, double _r

	pos cos(0) * _r + _x, sin(0) * _r + _y
	repeat 64, 1
		line cos(PI_D32 * cnt) * _r + _x, sin(PI_D32 * cnt) * _r + _y
	loop
	return

#deffunc timer var _dt, var _fps, int _udms, int _id

	getreq t, SYSREQ_TIMER
	_dt = t - pt(_id)
	pt(_id) = t
	tdt(_id) += _dt
	fc(_id)++
	if (tdt(_id) >= _udms) {
		_fps = double(fc(_id)) / tdt(_id) * 1000
		fc(_id) = 0
		tdt(_id) = 0
	}
	return t

#global


*start

	dim pt@dish_util, 16

	title TITLE_NAME

	celload cnvName(DATA_STAR), 1
	celdiv 1, 32, 32, 16, 16
	
	initImgFont
	loadImgFont cnvName(DATA_FONT), cnvName(DATA_FONTIMG)

	gsel 0
	starNum = 100
	dim starTime, starNum
	ddim starPosX, starNum
	ddim starPosY, starNum
	ddim starPreV, starNum
	ddim starVelX, starNum
	ddim starVelY, starNum
	ddim gstarPosX, starNum
	ddim gstarPosY, starNum
	fps = 60.0
	
*init
	randomize
	timer dt, fps, 500
	nowTime = stat
	dim gstarTime, starNum
	repeat starNum
		genStar cnt
		gstarPosX(cnt) = 999.0
	loop
	score = 0
	n = 3
	dim scoreT, n
	dim scoreA, n
	dim scoreX, n
	dim scoreY, n
	repeat n
		scoreX(cnt) = 999
	loop
	scoreIdx = 0
	circleSize = 0.0
	startTime = nowTime
	ttime = nowTime
*mainLoop
	timer dt, fps, 500
	nowTime = stat
	stick key, 256 * scene
	if (scene) {
		remainTime = 20000 - (nowTime - startTime)
		if (remainTime <= 0) {
			remainTime = 0
			scene = 0
			ttime = nowTime
		}
		if (key & 16) || (key & 128) {
			scene = 0
			ttime = nowTime - 1000
		}
		if (key & 256) {
			if (mlbDown == 0) {
				ctime = nowTime
			}
			mlbDown = 1
			circleSize = 130.0 - 4.0 / (double(nowTime - ctime) / 8000 + 0.04)
		} else {
			if (mlbDown) {
				preScore = score
				repeat starNum
					x = mousex - starPosX(cnt)
					y = mousey - starPosY(cnt)
					if (sqrt(x * x + y * y) <= circleSize) {
						if (scene) {
							score++
						}
						gstarTime(gsIdx) = nowTime
						gstarPosX(gsIdx) = starPosX(cnt)
						gstarPosY(gsIdx) = starPosY(cnt)
						gsIdx = (gsIdx + 1) \ starNum
						genStar cnt
					}
				loop
				t = score - preScore
				if (t > 0) {
					scoreT(scoreIdx) = nowTime
					scoreA(scoreIdx) = t
					scoreX(scoreIdx) = limit(mousex, 40, 440)
					scoreY(scoreIdx) = limit(mousey - 30, 40, 420)
					scoreIdx++
					scoreIdx \= 3
				}
			}
			mlbDown = 0
			circleSize = 0.0
		}
	} else {
		circleSize = 0.0
		if (nowTime - ttime > 1000) {
			if (key & 256) {
				if (mlbDown == 0) {
					scene = 1
					goto *init
				}
			} else {
				mlbDown = 0
			}
		}
	}
	repeat starNum
		stime = nowTime - starTime(cnt)
		v = 3.0 / (0.0000005 * stime + 0.002)
		starPosX(cnt) += starVelX(cnt) * (starPreV(cnt) - v)
		starPosY(cnt) += starVelY(cnt) * (starPreV(cnt) - v)
		starPreV(cnt) = v
		if (starPosX(cnt) < 0) {
			starPosX(cnt) = -starPosX(cnt)
			starVelX(cnt) = -starVelX(cnt)
		}
		if (starPosX(cnt) > 480) {
			starPosX(cnt) = 960.0 - starPosX(cnt)
			starVelX(cnt) = -starVelX(cnt)
		}
		if (starPosY(cnt) < 0) {
			starPosY(cnt) = -starPosY(cnt)
			starVelY(cnt) = -starVelY(cnt)
		}
		if (starPosY(cnt) > 480) {
			starPosY(cnt) = 960.0 - starPosY(cnt)
			starVelY(cnt) = -starVelY(cnt)
		}
	loop
	redraw 0
	color
	boxf
	gmode 0
	gradf , , , , 1, $10243e, $220428
	gmode 5, , , 255
	repeat starNum
		pos starPosX(cnt), starPosY(cnt)
		celput 1
	loop
	repeat starNum
		if (nowTime - gstarTime(cnt) < 170) {
			et = nowTime - gstarTime(cnt)
			pos gstarPosX(cnt), gstarPosY(cnt)
			gmode 5, , , 20.0 * (180 - et) / 17 + 40
			s = 0.02 * et + 1
			celput 1, , s, s
		}
	loop
	gmode 5, , , 255
	repeat 3
		if (nowTime - scoreT(cnt) < 1000) {
			t = scoreA(cnt)
			s = 1.4 + t / 10
			y = scoreY(cnt) + 2.0 / (0.001 * (nowTime - scoreT(cnt)) + 0.03)
			setImgFontAttr s, s, 1 + s * 0.8
			drawImgStrC strf("+%d", t), scoreX(cnt), y
		}
	loop
	color 255, 255, 255
	drawCircle mousex, mousey, circleSize
	gmode 3, , , 180 - scene * 60
	abox 0,   0, 480, 30
	abox 0, 450, 480, 30
	gmode 5, , , 255
	setImgFontAttr 3, 3, 4
	drawImgStrR str(score), 170, 4
	drawImgStrR strf("%.1f", double(remainTime) / 1000), 360, 4
	setImgFontAttr 1, 1, 2
	drawImgStrR strf("%d fps", fps), 478, 466
	color 255, 255, 255
	boxf 480 - dt * 2, 477, 478, 478
	if (scene == 0) {
		elptime = nowTime - ttime
		gmode 3, , , sin(0.00095 * elptime) * 20 + 160
		abox 0, 160, 480, 160
		gmode 5, , , 255
		setImgFontAttr 3, 3, 4
		drawImgStrC TITLE_NAME, 240, 190
		if (elptime > 1000) {
			y = limit(sin(0.00095 * elptime) * 10 * (elptime > 28000) + 270 ,0, 270)
			setImgFontAttr 2, 2, 3
			drawImgStrC "CLICK/TAP to start", 240, y
		}
	}
	redraw
	await 1
	goto *mainLoop


#deffunc abox int _x, int _y, int _sx, int _sy
	color
	grect _x + _sx / 2, _y + _sy / 2, 0, _sx, _sy
	return

#deffunc genStar int _id
	starTime(_id) = nowTime
	starPosX(_id) = double(rnd(480))
	starPosY(_id) = double(rnd(480))
	starVelX(_id) = (double(rnd(50)) / 50) * (rnd(2) * 2 - 1)
	starVelY(_id) = (double(rnd(50)) / 50) * (rnd(2) * 2 - 1)
	return
