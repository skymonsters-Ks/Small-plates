#module enemy

#const APR_CNT 40

#deffunc initEnemy

	num = 12
	dim life, num
	dim tcnt, num
	ddim posx, num
	ddim posy, num
	dim bcnt, num
	ddim bang, num
	ddim bspd, num
	existnum = 0
	return

#deffunc genEnemy double _x, double _y

	repeat num
		if (life(cnt)) : continue
		life(cnt) = 1
		tcnt(cnt) = 0
		posx(cnt) = _x
		posy(cnt) = _y
		bcnt(cnt) = 0
		break
	loop
	return

#deffunc moveEnemy

	existnum = 0
	rank = getRank()
	repeat num
		if (life(cnt)) {
			if (bcnt(cnt)) {
				bcnt(cnt)--
			} else {
				if (tcnt(cnt)) {
					genBullet posx(cnt), posy(cnt), bang(cnt), bspd(cnt)
					bcnt(cnt) = APR_CNT + limit(60 - rank * 7, 1, 60)
				} else {
					bcnt(cnt) = APR_CNT
				}
				bspd(cnt) = limitf(rank + 5, 0, 10)
			}
			if (bcnt(cnt) == APR_CNT) {
				bang(cnt) = getAngleToPlayer(posx(cnt), posy(cnt)) + limitf(0.0002 * (rnd(201) - 100) * rank, -1.4, 1.4)
				if (scene@ == SC_MAIN) : playSound SND_READY
			}
			tcnt(cnt)++
			existnum++
		}
	loop
	return

#defcfunc getEnemyNum

	return existnum

#defcfunc getEnemyMax

	return num

#defcfunc searchTargetEnemy var _resx, var _resy, double _x, double _y, double _r

	nr = 9999
	id = -1
	repeat num
		if (life(cnt)) : if (tcnt(cnt) > APR_CNT) {
			r = dist(posx(cnt), posy(cnt), _x, _y)
			if (r < _r) : if (r < nr) {
				nr = r
				id = cnt
			}
		}
	loop
	if (id >= 0) {
		_resx = posx(id)
		_resy = posy(id)
		return 1
	}
	return 0

#defcfunc distNearestEnemy double _x, double _y

	nr = 9999
	repeat num
		if (life(cnt)) {
			r = dist(posx(cnt), posy(cnt), _x, _y)
			if (r < nr) {
				nr = r
			}
		}
	loop
	return nr

#defcfunc checkHitEnemy double _x, double _y, double _s

	res = 0
	repeat num
		if (life(cnt)) : if (tcnt(cnt) > APR_CNT) {
			if (dist(_x, _y, posx(cnt), posy(cnt)) < _s) {
				life(cnt) = 0
				genExplosion posx(cnt), posy(cnt)
				if (scene@ == SC_MAIN) : playSound SND_EXPLOSION
				addScore 100
				addMultiplier 1
				res = 1
				break
			}
		}
	loop
	return res

#deffunc drawEnemy

	repeat num
		if (life(cnt)) {
			if (tcnt(cnt) > APR_CNT) {
				color 255, , 160
				grect posx(cnt), posy(cnt), -0.04 * tcnt(cnt), 16, 16
				grect posx(cnt), posy(cnt), 0.05 * tcnt(cnt), 16, 16
				color 255, 255, 255
				grect posx(cnt), posy(cnt), -0.04 * tcnt(cnt), 11, 11
				grect posx(cnt), posy(cnt), 0.05 * tcnt(cnt), 11, 11
			}
			if (bcnt(cnt) <= APR_CNT) {
				x = posx(cnt)
				y = posy(cnt)
				co = cos(bang(cnt))
				si = sin(bang(cnt))
				s = bcnt(cnt)
				len = bspd(cnt) * s * 1.2 + 5
				color 255
				circler x, y, s
				line co * len + x, si * len + y, co * s + x, si * s + y
			}
		}
	loop
	return

#global
